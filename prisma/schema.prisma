// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// When changed:
// npx prisma migrate dev -n "what changed"
// npx prisma generate

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String      @id @default(cuid())
  name          String?
  email         String?     @unique
  image         String?
  emailVerified DateTime?
  accounts      Account[]
  sessions      Session[]
  preference    Preference?
}

model Preference {
  userId   String    @id
  user     User      @relation(fields: [userId], references: [id])
  skinType String?
  concerns Concern[] @relation("PreferenceConcerns")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  access_token      String? @db.Text
  refresh_token     String? @db.Text
  id_token          String? @db.Text
  expires_at        Int?
  scope             String?
  token_type        String?
  user              User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  user         User     @relation(fields: [userId], references: [id])
}

model Product {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  image    String   @db.Text
  category String
  reviews  Review[]
}

model Review {
  id        Int       @id @default(autoincrement())
  product   Product   @relation(fields: [productId], references: [id])
  productId Int
  concerns  Concern[] @relation("ReviewConcerns")
  comment   String?
  rate      Int
  skinType  Int
}

model Concern {
  id   Int    @id @default(autoincrement())
  slug String @unique

  reviews     Review[]     @relation("ReviewConcerns")
  preferences Preference[] @relation("PreferenceConcerns")
}
